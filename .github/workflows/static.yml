# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Cache specific folders
        uses: actions/cache@v4
        with:
          path: images/
          key: ${{ runner.os }}-images-${{ hashFiles('images/**') }}-${{ hashFiles('images/*') }}
          
      # Add more steps here if needed for your workflow
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      - name: Changed Files
        id: get_changed_files
        uses: RocknBirra/changed-files
        with:
          files: |
            '*.html'
            '*.css'
            '*.svg'
            'images/**'

      - name: Upload changed files
        if: steps.get_changed_files.outputs.any_changed == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ steps.get_changed_files.outputs.all_changed_files }}

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
